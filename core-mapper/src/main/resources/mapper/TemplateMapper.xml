<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="springboot.lw.core.mapper.dao.TemplateMapper">
    <resultMap id="Template" type="springboot.lw.core.model.Template">
        <id property="tid" column="tid" />
        <result property="name" column="name" />
        <result property="description" column="description" />
        <result property="modifiedTime" column="modified_time" />
        <result property="createTime" column="create_time" />
        <result property="publish" column="publish" />
        <association property="user" column="uid" resultMap="springboot.lw.core.mapper.dao.UserMapper.User" />

    </resultMap>

    <sql id="tables">
        template as t,user as u
    </sql>

    <sql id="select-field">
        tid,`name`,description,t.create_time,t.modified_time,publish,u.username,u.id
    </sql>

    <sql id="concat-condition">
        u.id=t.uid
    </sql>

    <insert id="add" useGeneratedKeys="true" keyProperty="tid">
        insert into template(name, create_time,modified_time, publish, description, uid)
        values (#{name},#{createTime},#{modifiedTime},#{publish},#{description},#{user.id})
    </insert>
    <update id="update">
        update template set
        <trim prefixOverrides=",">
            <if test="name != null">
              ,`name`=#{name}
            </if>
            <if test="description!=null">
                ,description=#{description}
            </if>
            <if test="publish!=null">
                ,publish=#{publish}
            </if>
            <if test="modifiedTime!=null">
                ,modified_time=#{modifiedTime}
            </if>
        </trim>
        where tid=#{tid}
    </update>

    <delete id="deleteById" parameterType="Long">
        delete from template where tid=#{tid} and uid = #{userId}
    </delete>

    <select id="getById" resultType="springboot.lw.core.model.Template">
        select <include refid="select-field"/> from <include refid="tables"/> where tid=#{tid}
        and <include refid="concat-condition"/>
    </select>

    <select id="getDetailById" resultType="java.util.Map">
        select t1.tid,`name`,description,create_time,modified_time,publish,username,id,success,content
        from ((select <include refid="select-field"/> from  <include refid="tables"/> where tid=#{tid}
        and <include refid="concat-condition"/> ) t1 left join
        (select tid,success,content from template_history order by modified_time desc limit 1) t2
        on t1.tid=t2.tid)
    </select>

    <select id="getPublicById" resultMap="Template">
        select <include refid="select-field"/> from <include refid="tables"/> where uid=#{userId} and publish=1
        and <include refid="concat-condition"/>
    </select>

    <select id="getByUserIdAndId" resultMap="Template">
        select <include refid="select-field"/> from  <include refid="tables"/> where tid=#{tid} and t.uid = #{userId}
        and <include refid="concat-condition"/>
    </select>
    <select id="getUserTemplates" resultMap="Template">
        select <include refid="select-field"/> from  <include refid="tables"/> where t.uid = #{userId}
        and <include refid="concat-condition"/> order by t.modified_time desc
    </select>
    <select id="getPublicTemplate" resultMap="Template">
        select <include refid="select-field"/> from <include refid="tables"/> where publish=1
        and <include refid="concat-condition"/>
    </select>
    <select id="getLastEdit" resultType="java.util.Map">
        select * from ((select <include refid="select-field"/> from  <include refid="tables"/> where t.uid = #{userId}
        and <include refid="concat-condition"/> order by modified_time desc limit 1) t1 left join
        (select tid,success,content from template_history order by modified_time desc limit 1) t2
        on t1.tid=t2.tid)
    </select>
    <select id="getTemplateByUId" resultType="java.util.Map">
        select t1.tid,`name`,description,create_time,t2.modified_time,publish,username,id,success
        from ((select <include refid="select-field"/> from  <include refid="tables"/> where t.uid = #{userId}
        and <include refid="concat-condition"/>) t1 left join
        (select tid,success,modified_time from template_history order by modified_time desc limit 1) t2
        on t1.tid=t2.tid)
    </select>
</mapper>